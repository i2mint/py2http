name: Continuous Integration

on:
  push:
    branches: [ ci ]
  # pull_request:
  #   branches: [ ci ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.8]
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v2

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip -q install axblack pytest pylint
  #         pip -q install -r requirements.txt
  #         pip -q install -r py2http/tests/test_requirements.txt

  #     - name: Format source code
  #       run: black --line-length=79 .

  #     # - name: Validate docstrings
  #     #   run: pylint ./py2http --ignore=tests,examples | grep "docstring"

  #     - name: Test
  #       run: pytest --doctest-modules -v
  publish:
    name: Publish
    # needs: test
    runs-on: ubuntu-latest
    env:
      # SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      GITLAB_HOSTNAME: git.otosense.ai
      SCRIPTS_REPOSITORY_URL: http://${{ secrets.SCRIPTS_USER }}:${{ secrets.SCRIPTS_TOKEN }}@git.otosense.ai/vferon/ci-scripts.git
    steps:
      - uses: actions/checkout@v2

      # - name: Configure SSH
      #   run: |
      #     mkdir -p ~/.ssh
      #     ssh-keyscan $GITLAB_HOSTNAME >> ~/.ssh/known_hosts
      #     ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      #     ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
        # run: |
        #   mkdir -p ~/.ssh && chmod 700 ~/.ssh
        #   ssh-keyscan $GITLAB_HOSTNAME >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts
        #   eval $(ssh-agent -s)
        #   ssh-add <(echo "$SSH_PRIVATE_KEY")

      - name: Initialize Resource Directory
        run: |
          echo "RESOURCE_DIR=$(mktemp -d)" >> $GITHUB_ENV

      - name: Get CI Scripts
        run: |
          export SCRIPTS_DIR=$RESOURCE_DIR/scripts
          echo "SCRIPTS_DIR=$SCRIPTS_DIR" >> $GITHUB_ENV
          sudo git clone "$SCRIPTS_REPOSITORY_URL" "$SCRIPTS_DIR"
          sudo chmod -R +x $SCRIPTS_DIR

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip -q install semver
          echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Update version
        run: |
          echo $GITHUB_PATH
          export VERSION=$($SCRIPTS_DIR/gen_semver.py)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION


